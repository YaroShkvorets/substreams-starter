services:
  main:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9000:9000" # main
    platform: linux/amd64
    volumes:
      - ..:/workspace:cached
    entrypoint: '/bin/sh -c "while sleep 1000; do :; done"'
    depends_on:
      - postgres
    #network_mode: service:postgres

  ipfs:
    image: ipfs/kubo:v0.14.0
    volumes:
      -  ../devdata/ipfs:/data/ipfs
      - ../devdata/ipfs-export:/export
    ports:
      - "5001:5001" # ipfs
      - "8080:8080" # ipfs
    depends_on:
      - postgres
    #network_mode: service:postgres

  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000' # graph-node
      - '8001:8001' # graph-node
      - '8020:8020' # graph-node
      - '8030:8030' # graph-node
      - '8040:8040' # graph-node
    volumes:
      - ../.graph-node:/config/graph-node:cached
      - ..:/workspace:cached  # .devcontainer, .env
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      GRAPH_LOG: info
      GRAPH_NODE_CONFIG: /workspace/.graph-node/config.toml
      SUBSTREAMS_ENDPOINT: mainnet.eth.streamingfast.io:443
      SUBSTREAMS_API_TOKEN: non-nil-try-me  # Eventually, replace this by a command that is driven by the 'main' container, and can restart the pod at will, with changed configuration.
    command:
      - /workspace/.devcontainer/start-graph-node.sh
    depends_on:
      - ipfs
      - postgres
    #network_mode: service:postgres

  postgres:
    image: postgres:15
    ports:
      - "5432:5432" # postgres
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    #command: ["postgres", "-cshared_preload_libraries=pg_stat_statements", "-clog_statement=all"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - ../devdata/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5432"]
      interval: 30s
      timeout: 10s
      retries: 15

  pgweb:
    image: sosedoff/pgweb:0.11.12
    restart: on-failure
    ports:
      - "8081:8081" # pgweb
    command: ["pgweb", "--bind=0.0.0.0", "--listen=8081", "--binary-codec=hex"]
    environment:
      - DATABASE_URL=postgres://graph-node:let-me-in@postgres:5432/graph-node?sslmode=disable
    depends_on:
      - postgres
    #network_mode: service:postgres

networks:
  default:
    driver: default